
TODO:
=====

{
  - verify checksum of /repodata/repomd.xml

  - Do we need to provide a keyring and accept new keys? 
    Talk to security-team about this.

  Talked to security-team: This is nice to have but no requirement
  because the client are checking the repomd too.
}


- YEP Add-On Product (server)
  * someone needs to build and sign the add-on periodically
  * add-on contains all server RPMs
  * new packages (e.g.) skelcd-control-YEP and skelcd-YEP
    (internal ones, for building the add-on)
  * ... (maybe to be discussed with POS team)

- yast module:
  - Write parameter in yep.conf (what does this mean?)
    [LOCAL]
    url=...
    https://<local.full.quallified.domain.name>/ 

- yup has a hardlink feature. Would be nice if we could have it too.
  It searches for same files (SLES <=> SLED as example) and
  create a hardlink to safe some disk space.

- add a logfile option to yep-mirror.pl and prepare the YEP::Mirror::... 
  modules to print in a logfile

- test what happens if two processes want to write yep.db
  How can we solve concutrrent access with DBI?

- create, implement and test a strategy how we can update the database structure
  after release. (e.g. if we need to add some tables, or collumns in tables) 


DONE:
=====

- localization of the client tools

- support HTTPS - the suse_register will only connect via https

- yast module
  * credentials and their testing
  * adjusting /etc/sysconfig/apache2
  * reloading apache2 when configuration changed
  * insserving apache2 if needed
  * configures cron to run /usr/bin/yep-mirror.pl periodically
  * insserving cron if needed
  * restarting cron if needed
  * checks and installs cron package if needed, otherwise
    are cron-relaetd functions disabled
  * check if a common server certificate is available
    exists /etc/ssl/servercerts/servercert.pem
    if it doesn't, offers to call a service proposal (CA proposal)
  * copies the CA (or the server certificate) to
    /srv/www/htdocs/yep.crt

- yast module:
  * found out that the server certificate does not work.
    we need to copy the ca-certificate to /srv/www/htdocs/yep.crt
    The ca can be found at:
    /etc/ssl/certs/YaST-CA.pem

- YEP::Registration listparam has to check for "accept=''" option
  [Not needed, a stripped result is produced by the client (suse_register)
   only]

- yep.db must be owned by user "wwwrun"
  Found out that sqlite must have write access to the directory too.
  We should think about to move the DB to /var/lib/wwwrun/
  [Is now at /var/lib/YEP/db/]

- call verify (yep-mirror.pl) after syncing a repo and restart syncing 
  if verify failed (e.g. 3 times before stopping)

- yep-mirror.pl: After mirror check if there are catalogs where the
  DOMIRROR flag is set to "Y" but the MIRRORABLE flag is set to "N".
  This can happen if an entitlement is expired on NCC. 
  In such a case we should print a warning message to inform the
  administrator that a catalog cannot be mirrored. He should check
  in NCC if he has an entitlement for this product.

- tool to setup custom catalogs?

- client tool for setting/initializing the "Mirrorable" flag
  in the Catalogs table:
       Comment: initialize database itself 
  * update Catalogs SET Mirrorable='N'
       Comment: set Mirrorable='N' everywhere (part of basic initialization)
  * download repo/repoindex.xml, parse it and set the
    available catalogs to 'Y' again.
       Comment: download "repo/repoindex.xml" and for all available catalogs in there
                set the Mirrorable flag to 'Y'
  * try to access repomd.xml of all YUM catalogs and set
    the "Mirroable" flags to 'Y' again
       Comment: download "repomd.xml" and for all available catalogs in there
                set the Mirrorable flag to 'Y'
       All three jobs should be run by:  yep initialize

- client tool to view all mirrorable catalogs and change the
  "DoMirror" Flag on demand.
      Comment: should support "list all catalogs" for Mirrorable and All catalog
                   yep list catalogs      (list Mirrorable)
                   yep list -a catalogs   (list all)
                   yep list products      (here we need the products list)
               List required fields (at least id, name, version, arch) to easyly activate them like this:
                   yep activate <catalog_id>
                   yep activate <catalog_name>
                   yep activate --product <product_name>    (resolves internally what catalogs this product has)
                   yep activate --version <verision_name>   (does this make sense?)
                   yep activate --arch <arch_name>          (does this make sense?)
               Only Mirroable catalogs can be activated!



- client tool to view :
  * the registrations
  * used products

- write yast module for initial setup
  * start database initialization (ncc-mirror) at the end
    of the YaST run.
  * NiceToHave: configuration of a cronjob for yep-mirror.pl

Ideas:
======
- provide test and production enviroment. 
  A restricted area to test patches and if tests are ok move them
  to production so that they can used by everyone.
  * register the testing enviroment can be done by providing a special
    URL parameter. Such a parameter can be configured on the clients in
    /etc/suseRegister.conf 

