
TODO:
=====


- default permissions of smt.conf are now 640, root, wwwrun
  -- Which means that getting the content of the file is quite trivial with
     user html directories and mod_perl or mod_php or ...
     User can easily create some script which is executed by accessing it over
     HTTP. Apache should be somehow limited and/or behavior documented.

- review help texts of our commandline tools.

- write helps texts for YaST

- usability tests of our commandline tools. 
  * What functionaly customers might miss.
  * Is the "how to use them" clear and obvious?


Nice-To-Have but not so important
=================================


- verify checksum of /repodata/repomd.xml

- Do we need to provide a keyring and accept new keys? 
  Talk to security-team about this.

  Talked to security-team: This is nice to have but no requirement
  because the client are checking the repomd too.


TODO next SP or SLE11 version
=============================

- provide --config <configfile> options for the smt commands to
  use a different configfile then /etc/smt.conf 

- write a function to create a LWP::UserAgent object

- idea to speed-up mirroring by integrating the hardlink feature.
  * create a table in DB with key = <rpm-name>-<checksum> and path
    column
  * during mirror, when fetching a new rpm, first look into DB if we
    have it already. If yes, create a hardlink (or copy) instead of
    downloading it from the network.
    If we do not have it yet, download it and create a database entry

DONE:
=====

- Dump Reports into CSV file. AI: jdsn

- Send Reports via eMail, optionally attach them as csv to the mail as well. AI: jdsn

- localization of the client tools

- support HTTPS - the suse_register will only connect via https

- yast module
  * credentials and their testing
  * adjusting /etc/sysconfig/apache2
  * reloading apache2 when configuration changed
  * insserving apache2 if needed
  * configures cron to run /usr/bin/smt-mirror.pl periodically
  * insserving cron if needed
  * restarting cron if needed
  * checks and installs cron package if needed, otherwise
    are cron-relaetd functions disabled
  * check if a common server certificate is available
    exists /etc/ssl/servercerts/servercert.pem
    if it doesn't, offers to call a service proposal (CA proposal)
  * copies the CA (or the server certificate) to
    /srv/www/htdocs/smt.crt

- yast module:
  * found out that the server certificate does not work.
    we need to copy the ca-certificate to /srv/www/htdocs/smt.crt
    The ca can be found at:
    /etc/ssl/certs/YaST-CA.pem

- yast module:
  - Write parameter in smt.conf
    [LOCAL]
    url=...
    https://<local.full.quallified.domain.name>/ 
    nccEmail=<emailaddress>
    reportEmail=<comma_separated_list_of_email_addresses>


About reportEmail:  specify a list of eMail addresses where the regular/daily SMT report should be sent to.
                    The report will be sent to the root user in any case and additionally to the listed addresses
                    The YaST module should offer an input field (or somthing applicable) to edit these addresses.
                    The value of this variable is a comma separated list of addresses.



About nccEmail: here is the help text which come from NCC if you enter 
                the email address via the webpage during registration:

		To access valuable resources in the Novell Customer Center, you need a 
		Novell Login account. The e-mail address that is associated with your 
		Novell Login account is the e-mail address that you should use when 
		registering this system. If you do not yet have a Novell Login account,
		enter a valid e-mail address that you want to associate with a 
		Novell Login account, and then use the same e-mail address when 
		creating the account.
		We ask that you provide an e-mail address for the following reasons. 
		We use this e-mail address to:
		  * Uniquely identify you with this system.
		  * Grant this system access to updates and subscription benefits.
		  * Send you important e-mail notifications regarding the subscription for this system.

		If you have any questions about how your e-mail address might be used, 
		see the privacy policy for Novell at 
		  http://www.novell.com/company/policies/privacy/textonly.html.
		For information about creating a Novell Login account, see 
		  https://secure-www.novell.com/selfreg/html/about.jsp.

- cron jobs for other smt tasks (locilka)
  * smt-ncc-sync, smt-mirror and smt-report maybe together in one job (one time a day)
  * smt-register in an extra job (every quarter?)

  Check if we can provide a default with the yep rpm.
  -> provided
  What happens if they are %config(noreplace)?
  Will a .rpmsave or .rpmnew file be a new cronjob?
  -> no, they're ignored

- SMT::Registration listparam has to check for "accept=''" option
  [Not needed, a stripped result is produced by the client (suse_register)
   only]

- smt.db must be owned by user "wwwrun"
  Found out that sqlite must have write access to the directory too.
  We should think about to move the DB to /var/lib/wwwrun/
  [Is now at /var/lib/SMT/db/]

- call verify (smt-mirror.pl) after syncing a repo and restart syncing 
  if verify failed (e.g. 3 times before stopping)

- smt-mirror.pl: After mirror check if there are catalogs where the
  DOMIRROR flag is set to "Y" but the MIRRORABLE flag is set to "N".
  This can happen if an entitlement is expired on NCC. 
  In such a case we should print a warning message to inform the
  administrator that a catalog cannot be mirrored. He should check
  in NCC if he has an entitlement for this product.

- tool to setup custom catalogs?

- client tool for setting/initializing the "Mirrorable" flag
  in the Catalogs table:
       Comment: initialize database itself 
  * update Catalogs SET Mirrorable='N'
       Comment: set Mirrorable='N' everywhere (part of basic initialization)
  * download repo/repoindex.xml, parse it and set the
    available catalogs to 'Y' again.
       Comment: download "repo/repoindex.xml" and for all available catalogs in there
                set the Mirrorable flag to 'Y'
  * try to access repomd.xml of all zypp catalogs and set
    the "Mirroable" flags to 'Y' again
       Comment: download "repomd.xml" and for all available catalogs in there
                set the Mirrorable flag to 'Y'
       All three jobs should be run by:  smt initialize

- client tool to view all mirrorable catalogs and change the
  "DoMirror" Flag on demand.
      Comment: should support "list all catalogs" for Mirrorable and All catalog
                   smt list catalogs      (list Mirrorable)
                   smt list -a catalogs   (list all)
                   smt list products      (here we need the products list)
               List required fields (at least id, name, version, arch) to easyly activate them like this:
                   smt activate <catalog_id>
                   smt activate <catalog_name>
                   smt activate --product <product_name>    (resolves internally what catalogs this product has)
                   smt activate --version <verision_name>   (does this make sense?)
                   smt activate --arch <arch_name>          (does this make sense?)
               Only Mirroable catalogs can be activated!



- client tool to view :
  * the registrations
  * used products

- write yast module for initial setup
  * start database initialization (ncc-mirror) at the end
    of the YaST run.
  * NiceToHave: configuration of a cronjob for smt-mirror.pl

- add a logfile option to smt-mirror.pl and prepare the SMT::Mirror::... 
  modules to print in a logfile

- provide test and production enviroment. 
  A restricted area to test patches and if tests are ok move them
  to production so that they can used by everyone.
  * register the testing enviroment can be done by providing a special
    URL parameter. Such a parameter can be configured on the clients in
    /etc/suseRegister.conf 

- have a look at the mod_perl Database handle feature.
  one db handle for apache
  perl-Apache-DBI
  Have a look at doc/Server-Tuning.txt

- how can a customer say, that he always wants to mirror _all_ mirrorable catalogs?
  Idea: add an "mirrorall" option to smt.conf and modify smt-ncc-sync to set 
        DOMIRROR flag to 'Y' for all mirrorable catalogs if this option is true 

- yup has a hardlink feature. Would be nice if we could have it too.
  It searches for same files (SLES <=> SLED as example) and
  create a hardlink to safe some disk space.

- add a parameter to smt.conf  about disable client registration at NCC
  * use this parameter in smt-register and smt-delete-registration

- created symlinks for activating smt by creating init.d script for smt. It requires apache2
  and  mysql services. This could also cover database update.
  (/etc/init.d/smt and /usr/sbin/rcsmt (symlink) scripts)

- send <smtguid> with every call to NCC. (mc)

- use Mirror Credentials for authentication everywhere.
  (This should be the case, but double check needed. mc)

- Auth request of Registrationdata not via basic auth
  Put the mirror credentials into the request XML

  <regdata xmlns="...">
    <authuser>...</authuser>
    <authpass>...</authpass>
    <smtguid>...</smtguid>
  </regdata>

  AI: mc

- schema version, needs to be present in the Makefile (for installation of
  schemas) and in the code (to check). Figure out a good way to handle this.

- test what happens if two processes want to write smt.db
  How can we solve concurent access with DBI?

- create, implement and test a strategy how we can update the database structure
  after release. (e.g. if we need to add some tables, or collumns in tables) 

- look on how to implement the migration using the module (dmacvicar)

- fix generating repoindex (jdsn)
  (use TARGET in Clients Table)

- report module should check the server certificate an warn if it is time
  to renew it. E.g. 15(10, 5,4,3,2,1,0) days before it expires.

- enhance the lock functions. If a lockfile is present, check if the process
  is realy running. If not remove the lockfile and go on.

- check if the CA in /srv/www/htdocs/smt.crt is still the one we use for
  apache. If not copy the CA again.

- SMT Add-On Product (server)
  * someone needs to build and sign the add-on periodically
  * add-on contains all server RPMs
  * new packages (e.g.) skelcd-control-SMT and skelcd-SMT
    (internal ones, for building the add-on)
  * ... (maybe to be discussed with POS team)
  * IMPORTANT: This add-on product must call the registration
               module if it is installed later on an existing SLES10
               using the yast2 add-on module

- provide details how to change the NU password for mysql, creating SMT 
  database, creating user and granting permissions, store the credentials in 
  smt.conf file (duncan)

- find a solution to randomize the cronjobs a little bit.
  The reason is, that not all SMT server in the world start
  requesting things from NCC at the same time.

- yast module:
  maybe set max_connections=160 in /etc/my.cnf
  needs some disuccion.

- yast module: reset/set mysql root password, create yep user

- modify listProducts registration command for SMT.
  Show only products where all required catalogs are localy mirrored.
  
  We have now -catstat (-c) option

- What about the Firewall?
    firewall is supported in YaST via CWM
    http and https services are open if selected

- yast module cannot change the smt database password.
  using /usr/lib/SMT/bin/smt-db cpw

- randomizing startup times of cron jobs

- Maybe we need to limit the number of request we send in <bulkop>
  E.g. send only 20 register / de-register request per <bulkop>
  If we have more, start again.


- review packaged documentation in /usr/share/doc/packages/smt/
  and remove useless things or add something which is missing.

- write man pages for commandline tools

- Doku: describe how to renew the server certificate.
        * using yast2-ca-management module
        * importing an own cert with common-server-certificate module
        
        Say also, that no changes on the clients are necessary as long
        as they use the same CA certificate. 
        (Our generated CA is valid for 10 years)

        Everybody using SMT have to do it after one year.
        To reduce support calls, we should describe this
        in our manual. 

        If the CA changes, every client must newly accept the certificate
        using the yast2 registration module.

        A new CA (on SMT server) must be copied to /srv/www/htdocs/smt.crt
        This is now done by the smt init script during "start"

        Explain the hostname problem.

        The server certificate must contain the correct hostname.
        If the client request https://some.hostname/ then "some.hostname"
        must be part of the certificate.
        Two places are possible:
        1.) as common name (CN in the subject) 
        2.) as "Subject Alternative Name" 
                DNS:some.hostname    and/or 
                IP:<ipaddress>
