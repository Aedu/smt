#!/usr/bin/env perl
use strict;
use warnings;
use SMT::Agent::Utils;

sub jobhandler
{
  my ($jobtype, $jobid, $args, $verbose) =  @_;

  SMT::Agent::Utils::logger ("jobhandler for NEWJOB called", $jobid);
  SMT::Agent::Utils::logger ("NEWJOB runs jobid \"$jobid\"", $jobid);

  # check whether this handler can handle requested jobtype
  SMT::Agent::Utils::error ("wrong job handler: \"NEWJOB\" cannot handle \"$jobtype\"", $jobid) if ( $jobtype ne "NEWJOB" );
  # check the passed args
  SMT::Agent::Utils::error("no or invalid arguments for this job", $jobid) unless ( isa($args, 'ARRAY') && isa($args->[0], 'HASH') );


  ##
  ## TODO insert job workflow here
  ##


  SMT::Agent::Utils::error( "NEWJOB not yet implemented", $jobid ) if 1;

  return (
    stdout   => ((defined $stdout) && $verbose ) ? $stdout : '',
    stderr   => ((defined $stderr) && $verbose ) ? $stderr : '',
    exitcode => $retval,
    success  => ($retval == 0 ) ? "true" : "false",
    result   => undef,
    message  => ($retval == 0 ) ? "NEWJOB successfully finished" : ("NEWJOB failed: " . $message))
  );

}

SMT::Agent::Utils::logger ("successfully loaded handler for jobtype \"NEWJOB\"");

return 1;

