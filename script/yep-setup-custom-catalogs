#!/usr/bin/perl

use strict;
use warnings;
use YEP::CLI;
use File::Basename;
use YEP::Utils;
use Digest::SHA1  qw(sha1 sha1_hex);

use Locale::gettext ();
use POSIX ();     # Needed for setlocale()

POSIX::setlocale(&POSIX::LC_MESSAGES, "");


my $help;


my @productids = ();
my $catalogid = "";
my $name = "";
my $description = "";
my $exturl = "";
my $delete = "";

use Getopt::Long;
&Getopt::Long::Configure( 'pass_through', 'no_autoabbrev');
&Getopt::Long::GetOptions(
                          'productid=i'   => \@productids,
                          'name=s'        => \$name,
                          'description=s' => \$description,
                          'exturl=s'      => \$exturl,
                          'delete=s'      => \$delete,
                          'help|h'        => \$help
                         );

if ( defined $help and ( $help == 1 ) )
{
    print basename($0) . __(" : setup a custom catalog\n");
    print "    --productid arg     " . __("Product id where this catalog belong to.\n");
    print "                        " .  __("You can use this option multiple times\n");
    print "                        " . __("to assign a catalog to multiple products \n");
    print "    --name  arg         " . __("The name of this catalog.\n");
    print "    --description arg   " . __("A description\n");
    print "    --exturl arg        " . __("The URL where this catalog can be mirrored from\n");
    print "    --delete arg        " . __("Remove a custom catalog with the given ID\n");
    print "\n\n";
    print __("Examples:\n\n");
    print "  yep-setup-custom-catalogs --productid 434 --name 'My_Catalog' --exturl 'http://my.domain.top/My_Catalog'\n";
    print "  yep-setup-custom-catalogs --delete 1cf336d819e8e5904f4d4b05ee081971a0cc8afc\n";
    
    exit 0;
}

if($delete ne "")
{
    print __(sprintf("Realy delete the catalog with ID '%s' (y/n)?", $delete));

    my $yn = <STDIN>;
    chomp($yn);
    
    if(lc($yn) eq __("y"))
    {
        my $removed = YEP::CLI::removeCustomCatalog(catalogid => $delete);
        if(!$removed)
        {
            print __("No catalog removed.\n");
            exit 1;
        }
        else
        {
            print __(sprintf("Catalog with ID '%s' removed.\n", $delete));
        }
    }
    exit 0;
}


my $dbh = YEP::Utils::db_connect();
if(!$dbh)
{
    die "Cannot connect the database";
}


while($name !~ /^[a-zA-Z\d_-]+$/)
{
    print __("Invalid catalog name. Allowed characters are characters, numbers, - and _\n");
    
    print __("Catalog Name:");
    $name = <STDIN>;
}
chomp($name);

while($exturl !~ /^https?:\/\//)
{
    print __("Invalid URL. A http or https url is required.\n");
    
    print __("URL:");
    
    $exturl = <STDIN>;
}
chomp($exturl);

if($description eq "")
{
    print __("Catalog description:");
    
    $description = <STDIN>;
}
chomp($description);

my $array = $dbh->selectall_arrayref("SELECT PRODUCTDATAID, PRODUCT, VERSION, RELEASE, ARCH from Products where PRODUCT_LIST='Y' group by product,version,release,arch",
                                     {Slice => {}});
my @validProductIds = ();
my $anotherone = 0;

if(@productids == 0 )
{
    print __("Select a product where this catalog belong to.\n\n");

    foreach my $item (@{$array})
    {
        print $item->{PRODUCTDATAID}."\t";
        print $item->{PRODUCT}." ";
        print $item->{VERSION}." " if(defined $item->{VERSION});
        print $item->{RELEASE}." " if(defined $item->{RELEASE});
        print $item->{ARCH}." " if(defined $item->{ARCH});
        print "\n";

        push @validProductIds, $item->{PRODUCTDATAID};
    }
    print "\n";
}

while(@productids == 0 || $anotherone)
{
    print __("Product Number:");
    
    my $pid = <STDIN>;
    chomp($pid);
    
    if( !grep( ($_ eq $pid), @validProductIds) )
    {
        print __("Invalid Product Number.\n");
        next;
    }
    push @productids, $pid;
    
    print __("Select an additional product for this catalog(y/n)?");
    my $yn = <STDIN>;
    chomp($yn);
    
    if(lc($yn) eq __("y"))
    {
        $anotherone = 1;
    }
    else
    {
        $anotherone = 0;
    }
}
$catalogid = sha1_hex($name);

my %options = (
               productids  => \@productids,
               catalogid   => $catalogid,
               name        => $name,
               description => $description,
               exturl      => $exturl
              );

my $success = YEP::CLI::setupCustomCatalogs( %options );
if($success)
{
    print __("Catalog successfully added.\n");
    exit 0;
}
else
{
    print __("Adding catalog failed.\n");
    exit 1;
}

             

