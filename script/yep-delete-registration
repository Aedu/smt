#!/usr/bin/perl -w

###########################################################################
## Copyright (c) 2007 SUSE LINUX Products GmbH, Nuernberg, Germany.
###########################################################################

BEGIN
{
    if(exists $ENV{https_proxy})
    {
        # required for Crypt::SSLeay HTTPS Proxy support
        $ENV{HTTPS_PROXY} = $ENV{https_proxy};
    }
}


use strict;
use SMT::Utils;
use SMT::NCCRegTools;
use Getopt::Long;
use LWP::UserAgent;
use Crypt::SSLeay;
use File::Basename;
use Data::Dumper;

use Locale::gettext ();
use POSIX ();     # Needed for setlocale()

POSIX::setlocale(&POSIX::LC_MESSAGES, "");


my $debug = 0;
my $help  = 0;

my @guids = ();

my $result = GetOptions ("guid|g=s"    => \@guids,
                         "debug|d"     => \$debug,
                         "help|h"      => \$help
                        );

if($help)
{
    print basename($0) . __(" [OPTIONS]\n");
    print __("Delete one or more registration from NCC and SMT\n");
    print "\n";
    print __("Options:\n");
    print "--guid -g        " . __("Unique ID of the client which should be deleted.\n");
    print "                 " . __("This option can be used multiple times.\n");
    print "--debug -d       " . __("enable debug mode\n");
    print "--help -h        " . __("show this message\n");
    exit 0;
}


if(@guids == 0)
{
    print STDERR __("No Unique ID provided.\n");
    exit 1;
}

print Data::Dumper->Dump([@guids]);


my $useragent = LWP::UserAgent->new(keep_alive => 1);
$useragent->protocols_allowed( [ 'https' ] );
$useragent->default_headers->push_header('Content-Type' => 'text/xml');
push @{ $useragent->requests_redirectable }, 'POST';

if(!SMT::Utils::openLock("smt-delete-registration"))
{
    print __("Delete registration process is still running.\n");
    exit 0;
}

my $dbh = undef;

$dbh = SMT::Utils::db_connect();

if(!$dbh)
{
    if(!SMT::Utils::unLock("smt-delete-registration"))
    {
        print STDERR __("Cannot remove lockfile.\n");
    }
    die __("Cannot connect to database");
}

eval
{
    my $nccreg = SMT::NCCRegTools->new(debug => $debug, useragent => $useragent, dbh => $dbh);
    my $err = $nccreg->NCCDeleteRegistration(@guids);
    if($err != 0)
    {
        if(!SMT::Utils::unLock("smt-delete-registration"))
        {
            print STDERR __("Cannot remove lockfile.\n");
        }
        exit 1;
    }
};
if($@)
{
    if(!SMT::Utils::unLock("smt-delete-registration"))
    {
        print STDERR __("Cannot remove lockfile.\n");
    }
    exit 1;
}

if(!SMT::Utils::unLock("smt-delete-registration"))
{
    print STDERR __("Cannot remove lockfile.\n");
}
exit 0;



