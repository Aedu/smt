#!/usr/bin/perl -w

###########################################################################
## Copyright (c) 2007 SUSE LINUX Products GmbH, Nuernberg, Germany.
###########################################################################

BEGIN
{
    if(exists $ENV{https_proxy})
    {
        # required for Crypt::SSLeay HTTPS Proxy support
        $ENV{HTTPS_PROXY} = $ENV{https_proxy};
    }
    $ENV{HTTPS_CA_DIR} = "/etc/ssl/certs/";
    #$ENV{HTTPS_DEBUG} = 1;
}


use strict;
use SMT::Utils;
use SMT::NCCRegTools;
use Getopt::Long;
use LWP::UserAgent;
use Crypt::SSLeay;
use File::Basename;
use Data::Dumper;

use Locale::gettext ();
use POSIX ();     # Needed for setlocale()

POSIX::setlocale(&POSIX::LC_MESSAGES, "");


my $debug = 0;
my $help  = 0;
my $logfile = "/dev/null";

my @guids = ();

my $result = GetOptions ("guid|g=s"    => \@guids,
                         "logfile|L=s" => \$logfile,
                         "debug|d"     => \$debug,
                         "help|h"      => \$help
                        );

if($help)
{
    print basename($0) . __(" [OPTIONS]\n");
    print __("Delete one or more registration from NCC and SMT\n");
    print "\n";
    print __("Options:\n");
    print "  --guid (-g)            :" . __("Unique ID of the client which should be deleted.\n");
    print "                          " . __("This option can be used multiple times.\n");
    print "  --debug (-d)           :" . __("enable debug mode\n");
    print "  --logfile (-L) <file>  : " . __("Path to logfile")."\n";
    exit 0;
}


if(@guids == 0)
{
    print STDERR __("No Unique ID provided.\n");
    exit 1;
}

#print Data::Dumper->Dump([@guids]);


my $useragent = LWP::UserAgent->new(keep_alive => 1);
$useragent->protocols_allowed( [ 'https' ] );
$useragent->default_headers->push_header('Content-Type' => 'text/xml');

# This does not work, we have to deal with redirects ourself
#push @{ $useragent->requests_redirectable }, 'POST';

if(!SMT::Utils::openLock("smt-delete-registration"))
{
    print __("Delete registration process is still running.\n");
    exit 0;
}

# open the logfile

my $LOG = SMT::Utils::openLog($logfile);

my $dbh = undef;

$dbh = SMT::Utils::db_connect();

if(!$dbh)
{
    if(!SMT::Utils::unLock("smt-delete-registration"))
    {
        print STDERR __("Cannot remove lockfile.\n");
    }
    die __("Cannot connect to database");
}

eval
{
    my $nccreg = SMT::NCCRegTools->new(log => $LOG, debug => $debug, useragent => $useragent, dbh => $dbh);
    my $err = $nccreg->NCCDeleteRegistration(@guids);
    if($err != 0)
    {
        if(!SMT::Utils::unLock("smt-delete-registration"))
        {
            print STDERR __("Cannot remove lockfile.\n");
        }
        exit 1;
    }
};
if($@)
{
    if(!SMT::Utils::unLock("smt-delete-registration"))
    {
        print STDERR __("Cannot remove lockfile.\n");
    }
    exit 1;
}

if(!SMT::Utils::unLock("smt-delete-registration"))
{
    print STDERR __("Cannot remove lockfile.\n");
}
exit 0;


#
# Manpage
#

=head1 NAME

smt delete-registration

=head1 SYNOPSIS

smt delete-registration [help|--help|-h]

smt delete-registration --guid|-g id1 [--guid|-g id2] ...

smt delete-registration --debug --guid id1

=head1 DESCRIPTION

I<smt delete-registration> deletes one or more registrations from SMT and NCC. It will deregister machines from the system.

=head1 OPTIONS

=head2 MACHINE GUID

=over

=item --guid|-g id

Deletes the machine with guid B<id> from the system. This parameter can be used multiple times.

=back

=head2 DEBUG

=over

=item --debug|-d

Enable debug mode for verbose logging.

=item --logfile|-L file

Write log messages to B<file>.

=back


=head1 AUTHORS and CONTRIBUTORS

Duncan Mac-Vicar Prett, Lukas Ocilka, Jens Daniel Schmidt, Michael Calmer

=head1 LICENSE

Copyright (c) 2008 SUSE LINUX Products GmbH, Nuernberg, Germany.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 675 Mass
Ave, Cambridge, MA 02139, USA.

=cut

